package com.example.servicio;

import java.util.List;
import com.example.modelo.Usuario;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;
import com.example.dto.UsuarioRegistroDTO;
import com.example.repositorio.UsuarioRepositorio;

@Service
public class UsuarioServicioImpl implements UsuarioServicio {
	@Autowired
	private BCryptPasswordEncoder passwordEncoder;
	
	private UsuarioRepositorio usuarioRepositorio;
	
	public UsuarioServicioImpl(UsuarioRepositorio usuarioRepositorio) {
		super();
		this.usuarioRepositorio = usuarioRepositorio;
	}

	@Override
	public Usuario guardar(UsuarioRegistroDTO registroDTO) {
		Usuario user=new Usuario(registroDTO.getUsername(),registroDTO.getFirst_name(), 
				registroDTO.getLast_name(),registroDTO.getEmail(), 
				passwordEncoder.encode(registroDTO.getPassword()),registroDTO.getIs_superuser());
		return usuarioRepositorio.save(user);
	}

	@Override
	public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
		Usuario usuario = usuarioRepositorio.findByUsername(username);
		if(usuario==null) {
			throw new UsernameNotFoundException("Usuario o password invalidos");
		}
		return new User(usuario.getEmail(), usuario.getPassword(), null);
	}

	@Override
	public List<Usuario> listarUsuarios() {
		return usuarioRepositorio.findAll();
	}
	
}
